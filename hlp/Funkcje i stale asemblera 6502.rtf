{\rtf1\ansi \deff2\deflang1033{\fonttbl{\f2\fswiss\fcharset0\fprq2 Helv{\*\falt Arial CE};}{\f3\fmodern\fcharset0\fprq1 Courier{\*\falt Courier New CE};}{\f11\fmodern\fcharset238\fprq1 Courier New CE;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar \f2\fs20\lang1045 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive\b\f3\fs32 
\sbasedon10 Dyrektywa;}{\*\cs16 \additive\f3\fs20 \sbasedon10 Program;}{\*\cs17 \additive\b\f3\fs20 \sbasedon10 Sk\'b3adnia;}{\*\cs18 \additive\f2\fs20 \sbasedon10 Normalny tekst;}{\s19\widctlpar \f2\fs20\lang1045 \sbasedon0\snext19 footnote text;}{\*
\cs20 \additive\f2\fs12\super \sbasedon10 footnote reference;}{\s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 \sbasedon0\snext21 Wci\'eaty tekst;}}{\info{\title     "}{\author MiK}{\operator MiK}{\creatim\yr1996\mo11\dy9\hr21\min42}
{\revtim\yr1997\mo4\dy20\hr23\min39}{\version24}{\edmins47}{\nofpages26}{\nofwords1554}{\nofchars8860}{\*\company  }{\vern57443}}\paperw11906\paperh16838\margl1417\margr1417\margt1417\margb1417 
\deftab708\widowctrl\ftnbj\aenddoc\hyphhotz425\hyphcaps0\formshade \fet0\sectd \linex0\headery709\footery709\colsx709\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar 
\f2\fs20\lang1045 {\ul Opis funkcji i sta\'b3ych makroasemblera 6502}
\par {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_fn}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} funkcje; funkcje, .DEF()}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} fn_def}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .DEF()}}{\cs15\b\f3\fs32 .}{\b\f3\fs32 DEF()}
\par {\cs18 Funkcja sprawdzaj\'b9ca, czy podana etykieta jest zdefiniowana. Sprawdzenie dotyczy tylko etykiet zmiennych i sta\'b3ych asemblacji - etykiety makrodefinicji tworz\'b9 odr\'eabn\'b9 przestrze\'f1 nazw (funkcja nie spraw
dza tej przestrzeni nazw). Ponadto sprawdzenie mo\'bfe dotyczy\'e6 wy\'b3\'b9cznie etykiet o zasi\'eagu globalnym - etykiety lokalne s\'b9 niedozwolone jako argument funkcji .DEF().
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 .DEF(<etykieta>)\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .IF .DEF(alfa)\tab ; je\'9cli zdefiniowano etykiet\'ea \lquote alfa\rquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Rezultat:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Funkcja .DEF() zwraca warto\'9c\'e6 0 na oznaczenie \ldblquote etykieta niezdefiniowana\rdblquote  oraz warto\'9c\'e6 1 na oznaczenie \ldblquote etykieta zdefiniowana\rdblquote .
\par }\pard\plain \widctlpar \f2\fs20\lang1045 {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_fn}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K}
 funkcje; funkcje, .REF()}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} fn_ref}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .REF()}}{\cs15\b\f3\fs32 .}{\b\f3\fs32 REF()}
\par {\cs18 Funkcja sprawdzaj\'b9ca, czy podana etykieta zosta\'b3a u\'bfyta (czy nast\'b9pi\'b3o do niej odwo\'b3anie) lub te\'bf, czy jest ona zdefiniowana. Sprawdzenie dotyczy tylko etykiet zmiennych i sta\'b3ych asemblacji - etykiety makrodefinicji tworz
\'b9 odr\'eabn\'b9 przestrze\'f1 nazw (funkcja nie sprawdza tej przestrzeni nazw). Ponadto sprawdzenie mo\'bfe dotyczy\'e6 wy\'b3\'b9cznie etykiet o zasi\'eagu globalnym - etykiety lokalne s\'b9 niedozwolone jako argument funkcji .REF().
\par 
\par Sk\'b3adnia:
\par }\pard \widctlpar\intbl {\cs17\b\f3 .REF(<etykieta>)\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .IF .REF(alfa)\tab ; je\'9cli odwo\'b3ano si\'ea do etykiety \lquote alfa\rquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Rezultat:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Funkcja .REF() zwraca warto\'9c\'e6 0 na oznaczenie \ldblquote nie by\'b3o odwo\'b3ania do etykiety\rdblquote  oraz warto\'9c\'e6 1 na oznaczenie \ldblquote wyst\'b9pi\'b3o odwo\'b3
anie do etykiety lub etykieta zdefiniowana\rdblquote .
\par }\pard\plain \widctlpar \f2\fs20\lang1045 {\cs18 
\par Przyk\'b3ad zastosowania:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab  .IF .REF(put)\tab ; czy u\'bfyto etykiety \lquote put\rquote ?\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {
\cs16\f3 put:\tab  ; definicja procedury...\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab  .ENDIF\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 
\page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_fn}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} funkcje; funkcje, .PASSDEF()}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} fn_passdef}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .PASSDEF()}}{\cs15\b\f3\fs32 .PASSD}{\b\f3\fs32 EF()}
\par {\cs18 Funkcja sprawdzaj\'b9ca, czy podana etykieta jest zdefiniowana przed bie\'bf\'b9cym wierszem, zawieraj\'b9cym sprawdzenie (tj. czy zosta\'b3a zdefiniowana w bie\'bf\'b9cym przej\'9cciu asemblacji). Sprawdzenie dotyczy tylko etykiet zmiennych i sta
\'b3ych asemblacji - etykiety makrodefinicji tworz\'b9 odr\'eabn\'b9 przestrze\'f1 nazw (funkcja nie sprawdza tej przestrzeni nazw). Ponadto sprawdzenie mo\'bfe dotyczy\'e6 wy\'b3\'b9cznie etykiet o zasi\'eagu globalnym - etykiety lokalne s\'b9
 niedozwolone jako argument funkcji .PASSDEF().
\par Funkcja PASSDEF() jest bezpieczniejszym odpowiednikiem DEF(). Pozwala na warunkowe definiowanie zmiennych po dokonaniu testu .IF .PASSDEF(etykieta)
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 .PASSDEF(<etykieta>)\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .IF .PASSDEF(alfa)\tab ; je\'9cli zdefiniowano ju\'bf etykiet\'ea \lquote alfa\rquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Rezultat:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Funkcja .PASSDEF() zwraca warto\'9c\'e6 0 na oznaczenie \ldblquote etykieta niezdefiniowana przed aktualnym wierszem\rdblquote  oraz warto\'9c\'e6 1 na oznaczenie \ldblquote 
etykieta zdefiniowana\rdblquote .
\par }\pard\plain \widctlpar \f2\fs20\lang1045 {\cs18 
\par Przyk\'b3ad zastosowania:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab  .IF !.PASSDEF(errno)\tab ; nie zdefiniowano jeszcze \lquote errno\rquote ?\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard 
\widctlpar\intbl {\cs16\f3 errno: .DW 0\tab \tab ; warunkowa definicja zmiennej nie spowoduje\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \tab  .ENDIF\tab \tab ; b\'b3\'eadu fazy dzi\'eaki funkcji .PASSDEF()\cell }\pard 
\widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \tab  .IF .REF(msg) && !.PASDEF(msg) ; je\'bfeli by\'b3o odwo\'b3anie, ale nie\cell }\pard \widctlpar\intbl {
\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 msg:\tab  .DB \rdblquote Komunikat...\rdblquote ,0\tab \tab ; by\'b3o definicji, to definiujemy \lquote msg\rquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard 
\widctlpar\intbl {\cs16\f3 \tab  .ENDIF\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_fn}K{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} funkcje; funkcje, .REF()}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} fn_ref}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .REF()}}{
\cs15\b\f3\fs32 .STRLEN}{\b\f3\fs32 ()}
\par \pard \widctlpar {\cs18 Funkcja obliczaj\'b9ca d\'b3ugo\'9c\'e6 wyra\'bfenia tekstowego.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 .STRLEN(<wyr_tekstowe>)\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .WORD .STRLEN(%1)\tab ; d\'b3ugo\'9c\'e6 tekstowego argumentu %1 makra\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Rezultat:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Funkcja .STRLEN() zwraca liczb\'ea znak\'f3w w podanym wyra\'bfeniu tekstowym.
\par }\pard\plain \widctlpar \f2\fs20\lang1045 {\cs18 
\par Przyk\'b3ad zastosowania:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 PutS\tab .MACRO str\tab \tab ; makrodefinicja drukowania\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab 
.JMP .put\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 .txt\tab .WORD .STRLEN(str$)\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \tab .BYTE str$\cell }\pard \widctlpar\intbl {\cs16\f3 \row 
}\pard \widctlpar\intbl {\cs16\f3 .put\tab LDA # >.txt\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \tab LDX # <.txt\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \tab JSR put_string\cell 
}\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .ENDM\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 \page }
\par {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .WORD; dyrektywy, .DW}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_word}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .WORD i .DW}}{\cs15\b\f3\fs32 .WORD}{\cs18  lub} {\cs15\b\f3\fs32 .DW}
\par {\cs18 Dyrektywy okre\'9claj\'b9ce warto\'9cci s\'b3\'f3w w kodzie wynikowym. Zgodnie z konwencj\'b9 6502 jako pierwszy umieszczany jest m\'b3odszy bajt s\'b3owa.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .DW expr \{ , expr \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]
\tab .WORD expr \{ , expr \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 alfa:\tab .DW $1234, 0\tab ; wygeneruje ci\'b9g $34, $12, 0, 0\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 
beta:\tab .WORD alfa\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .WORD alfa-1, beta\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 \page }{
\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .DBYTE; dyrektywy, .DD}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_dbyte}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .DBYTE i .DD}}{\cs15\b\f3\fs32  .DBYTE} {\cs18 lub} {\cs15\b\f3\fs32 .DD}
\par {\cs18 Dyrektywy okre\'9claj\'b9ce warto\'9cci pary bajt\'f3w w kodzie wynikowym. Jako pierwszy umieszczany jest starszy bajt.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .DD expr \{ , expr \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]
\tab .DBYTE expr \{ , expr \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar 
\par Przyk\'b3ad:
\par \trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 alfa:\tab .DD $1234, 0\tab ; wygeneruje ci\'b9g $12, $34, 0, 0\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 beta:
\tab .DBYTE alfa\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .DBYTE alfa-1, beta\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs16\f3 \page }{\cs20\fs12\super 
+{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .STR}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {
\cs20\fs12\super #} cmd_str}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .STR i .STRING}}{\cs15\b\f3\fs32  .STR} {\cs18 lub} {\cs15\b\f3\fs32 .STRING}
\par {\cs18 Dyrektywy okre\'9claj\'b9ce warto\'9cci bajt\'f3w w kodzie wynikowym na podstawie podanego \'b3a\'f1cucha znak\'f3w. Na pocz\'b9tku umieszczany jest bajt zawieraj\'b9cy d\'b3ugo\'9c\'e6 \'b3a\'f1cucha znak\'f3w. D\'b3ugo\'9c\'e6 ca\'b3ego \'b3a\'f1
cucha jest ograniczona do 255 znak\'f3w.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .STR expr \{ , expr \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]
\tab .STRING expr \{ , expr \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar 
\par Przyk\'b3ad:
\par \trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 alfa:\tab .STRING \rdblquote ABC\rdblquote , $D\tab ; wygeneruje ci\'b9g 4, \lquote A\rquote , \lquote B\rquote , \lquote C\rquote , $0D\cell }\pard \widctlpar\intbl {\cs16\f3 \row 
}\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 beta:\tab .STR \rdblquote Napis pr\'f3bny\rdblquote , $D, $A\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab 
.STR \rdblquote AB\rdblquote , \rdblquote CD\rdblquote , 13\tab ; wygeneruje 5, \lquote A\rquote , \lquote B\rquote , \lquote C\rquote , \lquote D\rquote , $0D\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs16\f3 \page }{
\cs20\f11\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .DCB}#{\footnote \pard\plain \s19\widctlpar 
\f2\fs20\lang1045 {\cs20\fs12\super #} cmd_dcb}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .DCB}}{\cs16\f3  }{\cs15\b\f3\fs32 .DCB}
\par {\cs18 Dyrektywa rezerwuj\'b9ca obszar pami\'eaci i inicjuj\'b9ca go podan\'b9 warto\'9cci\'b9.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .DCB expr [ , expr ]\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 buf:\tab .DCB $20,$FF\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K
{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .RS}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_rs} ${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {
\cs20\fs12\super $} .RS}} {\cs15\b\f3\fs32 .RS}{\cs18  lub }{\cs15\b\f3\fs32 .DS}
\par {\cs18 Dyrektywa rezerwuj\'b9ca obszar pami\'eaci przez przesuni\'eacie aktualnej zawarto\'9cci licznika lokacji kodu o podan\'b9 warto\'9c\'e6.
\par 
\par Sk\'b3adnia:
\par }\pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .RS expr\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 buf:\tab .RS $100\tab ; rezerwacja $100 bajt\'f3w\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .RS size
\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar 
\par \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K}
 dyrektywy; dyrektywy, .ORG; dyrektywy, *=}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_org}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .ORG i *=}} {\cs15\b\f3\fs32 .ORG}{\cs18  lub }{
\cs15\b\f3\fs32 *=}
\par \pard\plain \widctlpar \f2\fs20\lang1045 {\cs18 Dyrektywa okre\'9claj\'b9ca warto\'9c\'e6 licznika lokacji kodu.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .ORG expr\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab *= $1000\tab \tab ; licznik lokacji: $1000\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 buf:\tab 
.ORG * + $10\tab ; przesuni\'eacie licznika lokacji o $10 bajt\'f3w,\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab \tab \tab \tab ; etykieta \lquote buf\rquote  otrzyma poprzedni
\'b9 warto\'9c\'e6 licznika\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar 
\par \page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .START}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_start}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .START}} {\cs15\b\f3\fs32 .START}
\par {\cs18 Dyrektywa okre\'9claj\'b9ca pocz\'b9tek programu (miejsce startu) dla symulatora.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 \tab .START expr\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .START Start\tab ; uruchamianie programu od etykiety \lquote Start\rquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard 
\widctlpar\intbl {\cs16\f3 \tab .START $A100\tab ; uruchamianie programu od adresu $A100\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Opis:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Dyrektywa .START wyznacza miejsce, od kt\'f3rego symulator b\'eadzie uruchamia\'b3 program. Je\'9cli w programie nie zostanie u\'bfyta dyrektywa .START, symulator przyjmie za pocz\'b9
tek programu adres podany przy pierwszym wyst\'b9pieniu dyrektywy .ORG. W przeciwie\'f1stwie do dyrektywy .ORG, .START pozwala na u\'bfycie etykiet zdefiniowanych dalej (}{\cs18\i forward references}{\cs18 ).
\par }\pard\plain \widctlpar \f2\fs20\lang1045 {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K}
 dyrektywy; dyrektywy, .END}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_end}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .END}}{\cs15\b\f3\fs32  .END}
\par {\cs18 Dyrektywa okre\'9claj\'b9ca miejsce zako\'f1czenia asemblacji danego pliku.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .END\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 fin:\tab .END\tab \tab ; dalsze wiersze w danym pliku nie b\'ead\'b9 asemblowane\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Opis:
\par Dyrektywa .END ko\'f1czy asemblacj\'ea pliku, w kt\'f3rym zosta\'b3a umieszczona. Zastosowana w g\'b3\'f3wnym programie ko\'f1czy asemblacj\'ea w miejscu wyst\'b9pienia.}
\par \page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .INCLUDE}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_include}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .INCLUDE}} {\cs15\b\f3\fs32 .INCLUDE}
\par {\cs18 Dyrektywa w\'b3\'b9czaj\'b9ca plik do asemblacji.
\par 
\par Sk\'b3adnia:
\par }\pard \widctlpar\intbl {\cs17\b\f3 \tab .INCLUDE txt_expr\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .INCLUDE \rdblquote c:\\asm6502\\sta\'b3e.65s\rdblquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab 
.INCLUDE \rdblquote .\\makra\\makra\rdblquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Opis:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Dyrektywa .INCLUDE pozwala na w\'b3\'b9czenie do asemblowanego programu innych plik\'f3w \'9fr\'f3d\'b3owych. S\'b9 one wstawiane w miejscu wywo\'b3
ania dyrektywy .INCLUDE. Pozwala to na \'b3atwe do\'b3\'b9czanie plik\'f3w z definicjami sta\'b3ych i makr.}{\cs16\f3 
\par }\pard\plain \widctlpar \f2\fs20\lang1045 \page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K}
 dyrektywy; dyrektywy, .MACRO}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_macro}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .MACRO}} {\cs15\b\f3\fs32 .MACRO}
\par {\cs18 Dyrektywa otwieraj\'b9ca definicj\'ea makra.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 <etykieta>[:]\tab .MACRO [param \{, param\} [, ...]] | [...]\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 PushX\tab \tab .MACRO\tab \tab ; makro bezparametrowe\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 Print:\tab 
.MACRO ... \tab \tab ; makro z dowoln\'b9 ilo\'9cci\'b9 parametr\'f3w\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 Put:\tab \tab .MACRO chr\tab \tab ; makro z dok\'b3
adnie jednym parametrem\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Opis:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Dyrektywa .MACRO s\'b3u\'bfy do definiowania makr. Etykieta przed dyrektyw\'b9 .MACRO jest nazw\'b9 makrodefinicji i zostaje umieszczona w s\'b3owniku nazw makr (rozdzielnym ze s\'b3
ownikiem nazw pozosta\'b3ych etykiet).
\par Za dyrektyw\'b9 .MACRO mag\'b9 wyst\'b9pi\'e6 nazwy parametr\'f3w makra oraz wielokropek (...). Padana nazwa parametru mo\'bfe by\'e6 u\'bfyta w tre\'9cci makrodefinicji. Parametr taki jest wymagany przy wywo\'b3
aniu makra. Wielokropek (...) symbolizuje dowoln\'b9 liczb\'ea parametr\'f3w (w tym r\'f3wnie\'bf zero).
\par Do odwo\'b3ania si\'ea do parametr\'f3w mo\'bfna u\'bfy\'e6 ich nazw lub numer\'f3w kolejnych poprzedzonych znakiem \lquote %\rquote . Parametry numerowane s\'b9 od 1. Parametr o numerze 0 (%0) ma specjalne znaczenie - okre\'9cla z iloma parametrami zosta
\'b3o wywo\'b3ane makro.
\par W wywo\'b3aniu makra za nazw\'b9 umieszczamy oddzielone przecinkami wyra\'bfenia odpowiadaj\'b9ce kolejnym parametrom. Wyra\'bfenia te s\'b9 przez asembler interpretowane i obliczane.
\par Wszystkie etykiety rozpoczynaj\'b9ce si\'ea znakiem kropki (.) u\'bfyte w makrodefinicji s\'b9 dla niej lokalne i niedost\'eapne z zewn\'b9trz. Pozosta\'b3e etykiety s\'b9 globalne. W rozwijanej makrodefinicji mo\'bfna odwo\'b3ywa\'e6 si\'ea
 do etykiet globalnych, lokalnych programu oraz lokalnych makra.
\par }\pard\plain \widctlpar \f2\fs20\lang1045 {\cs18 
\par Przyk\'b3ad u\'bfycia:
\par }{\cs16\f3 Put:\tab .MACRO chr\tab \tab ; drukowanie znaku
\par \tab LDA #chr\tab \tab ; odwo\'b3anie do warto\'9cci parametru \lquote chr\rquote 
\par \tab JSR sys_put_char
\par \tab .ENDM
\par ; wywo\'b3anie:
\par \tab Put \rquote A\rquote 
\par 
\par Print:\tab .MACRO ...\tab ; drukowanie
\par .cnt\tab .= 0\tab \tab \tab ; licznik parametr\'f3w
\par \tab .REPEAT %0
\par .cnt\tab .= .cnt + 1
\par \tab .IF .PARAMTYPE(%.cnt) == 2\tab ; parametr typu tekstowego?
\par \tab   JSR sys_print_text\tab ; ci\'b9g znak\'f3w za wywo\'b3aniem procedury
\par \tab   .BYTE .STRLEN(%.cnt), %.cnt
\par \tab .ELSE\tab \tab \tab \tab \tab ; parametr liczbowy -> adres
\par \tab   LDA #>%.cnt\tab \tab ; starszy bajt adresu
\par \tab   LDX #<%.cnt\tab \tab ; m\'b3odszy bajt adresu
\par \tab   JSR sys_print
\par \tab .ENDIF
\par \tab .ENDR
\par \tab .ENDM
\par }{\cs18 
\par }
\par \page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .ENDM}#{\footnote \pard\plain \s19\widctlpar 
\f2\fs20\lang1045 {\cs20\fs12\super #} cmd_endm}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .ENDM}} {\cs15\b\f3\fs32 .ENDM}
\par {\cs18 Dyrektywa ko\'f1cz\'b9ca makrodefinicj\'ea. Patrz tak\'bfe }{\cs18\uldb .MACRO}{\cs18\v cmd_macro}{\cs18 
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 \tab .ENDM\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .ENDM\tab \tab ; koniec definicji makra\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {
\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .EXITM}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_exitm}${\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .EXITM}}{\cs15\b\f3\fs32  .EXITM}
\par {\cs18 Dyrektywa przerywaj\'b9ca rozwijanie makrodefinicji.
\par 
\par Sk\'b3adnia:
\par }\pard \widctlpar\intbl {\cs17\b\f3 \tab .EXITM\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .EXITM\tab ; dalsze wiersze makra nie zostan\'b9 wstawione\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 
\tab \tab \tab ; w miejscu wywo\'b3ania\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar 
\par {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .IF}#{\footnote 
\pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_if}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .IF}}{\cs15\b\f3\fs32  .IF}
\par {\cs18 Dyrektywa otwieraj\'b9ca asemblacj\'ea warunkow\'b9.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 \tab .IF expr\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .IF .REF(alfa)\tab ; je\'9cli by\'b3o odwo\'b3anie do etykiety \lquote alfa\rquote \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard 
\widctlpar\intbl {\cs16\f3 \tab .IF a==5\tab \tab ; je\'9cli etykieta \lquote a\rquote  ma warto\'9c\'e6 5\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \tab .IF b\tab \tab \tab ; je\'9cli etykieta \lquote b\rquote 
 ma niezerow\'b9 warto\'9c\'e6\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar\intbl {\cs16\f3 \tab .IF %0>2\tab \tab ; je\'9cli wywo\'b3ano makro z wi\'eacej ni\'bf dwoma\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd 
\trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab \tab \tab \tab ; parametrami\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar 
\par \page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .ELSE}#{\footnote \pard\plain \s19\widctlpar 
\f2\fs20\lang1045 {\cs20\fs12\super #} cmd_else}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .ELSE}} {\cs15\b\f3\fs32 .ELSE}
\par {\cs18 Dyrektywa asemblacji warunkowej.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 \tab .ELSE\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .ELSE\tab \tab ; je\'9cli odp. warunek po .IF nie by\'b3 spe\'b3niony\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {
\cs16\f3 \tab \tab \tab ; dalsze wiersze b\'ead\'b9 asemblowane\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs16\f3 
\par }\page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .ENDIF}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_endif}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .ENDIF}} {\cs15\b\f3\fs32 .ENDIF}
\par {\cs18 Dyrektywa ko\'f1cz\'b9ca asemblacj\'ea warunkow\'b9.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 \tab .ENDIF\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .ENDIF\tab ; koniec asemblacji warunkowej\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar 
\par \page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .ERROR}#{\footnote \pard\plain 
\s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_error}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .ERROR}} {\cs15\b\f3\fs32 .ERROR}
\par {\cs18 Dyrektywa generuj\'b9ca b\'b3\'b9d asemblacji.
\par 
\par Sk\'b3adnia:
\par }\pard \widctlpar\intbl {\cs17\b\f3 \tab .ERROR [txtexpr]\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .ERROR \rdblquote Wymagany jest parametr tekstowy w wywo\'b3aniu makra \rdblquote  + %0$\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar 
\par \page {\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .REPEAT; dyrektywy, .REPT}#{\footnote 
\pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_repeat}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .REPEAT}}{\cs15\b\f3\fs32 .REPEAT}{\cs18  lub }{\cs15\b\f3\fs32 .REPT}
\par {\cs18 Dyrektywa powtarzaj\'b9ca wiersze.
\par 
\par Sk\'b3adnia:
\par }\pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .REPEAT expr\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .REPEAT 10\tab \tab ; powt\'f3rz 10 razy\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 \tab .REPEAT %0\tab 
\tab ; powt\'f3rz tyle razy ile jest parametr\'f3w makra\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs16\f3 
\par }{\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .ENDR}#{\footnote 
\pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_endr}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $} .ENDR}}{\cs15\b\f3\fs32 .ENDR}
\par {\cs18 Dyrektywa ko\'f1cz\'b9ca blok wierszy do powtarzania.
\par 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .ENDR\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs16\f3 \tab .ENDR\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +} asm_cmd}K{\footnote 
\pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .OPT}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_opt}${\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super $
} .OPT}}{\cs15\b\f3\fs32 .OPT}
\par {\cs18 Dyrektywa zmieniaj\'b9ca opcje asemblera. Jedynymi dozwolonymi opcjami s\'b9:
\par 
\par }\trowd \trgaph70\trleft-70 \cellx1701\cellx9142 \pard \widctlpar\intbl {\cs18\b Nazwa opcji}{\cs18 \cell }{\cs18\b Znaczenie}{\cs18 \cell }\pard \widctlpar\intbl {\cs18 \row }\trowd \trgaph70\trleft-70 \cellx1701\cellx9142 \pard \widctlpar\intbl {\cs18 
Proc6502 \cell wybranie podstawowego zestawu rozkaz\'f3w procesora 6502\cell }\pard \widctlpar\intbl {\cs18 \row }\pard \widctlpar\intbl {\cs18 Proc65c02 \cell wybranie rozszerzonego zestawu rozkaz\'f3w procesor\'f3w 65c02, 6501 i in.\cell }\pard 
\widctlpar\intbl {\cs18 \row }\pard \widctlpar\intbl {\cs18 CaseSensitive \cell rozr\'f3\'bfnianie ma\'b3ych i wielkich liter w nazwach etykiet\cell }\pard \widctlpar\intbl {\cs18 \row }\trowd \trgaph70\trleft-70 \cellx1701\cellx9142 \pard 
\widctlpar\intbl {\cs18 CaseInsensitive \cell traktowania jako jednakowe ma\'b3ych i wielkich liter w nazwach etykiet\cell }\pard \widctlpar\intbl {\cs18 \row }\pard \widctlpar {\cs18 
\par Sk\'b3adnia:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs17\b\f3 \tab .OPT nazwa_opcji \{ , nazwa_opcji \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\pard \widctlpar\intbl {\cs17\f3 \tab .OPT Proc65c02, CaseInsensitive \cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs15\b\f3\fs32 \page }{\cs20\fs12\super +{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super +}
 asm_cmd}K{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super K} dyrektywy; dyrektywy, .ASCIS}#{\footnote \pard\plain \s19\widctlpar \f2\fs20\lang1045 {\cs20\fs12\super #} cmd_ascis}${\footnote \pard\plain \s19\widctlpar 
\f2\fs20\lang1045 {\cs20\fs12\super $} .ASCIS}}{\cs15\b\f3\fs32 .ASCIS}
\par {\cs18 Dyrektywa okre\'9claj\'b9ca warto\'9cci pojedynczych bajt\'f3w w kodzie wynikowym na podstawie danego \'b3a\'f1cucha znak\'f3w. Ostatni bajt ma odwr\'f3cony (XOR) najstarszy bit.
\par 
\par Sk\'b3adnia:
\par }\pard \widctlpar\intbl {\cs17\b\f3 [<etykieta>[:]]\tab .ASCIS <wyr> | txtexpr \{ , <wyr> | txtexpr \}\cell }\pard \widctlpar\intbl {\cs17\b\f3 \row }\pard \widctlpar {\cs18 
\par Przyk\'b3ad:
\par }\trowd \trgaph70\trleft-70 \cellx9142 \pard \widctlpar\intbl {\cs16\f3 alfa:\tab .ASCIS \rdblquote ABC\rdblquote \tab ; wygeneruje ci\'b9g $41, $42, $C3\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\trowd \trgaph70\trleft-70 \cellx9142 \pard 
\widctlpar\intbl {\cs16\f3 beta:\tab .ASCIS \rdblquote Stop\rdblquote ,$D\tab ; wygeneruje ci\'b9g \lquote S\rquote , \lquote t\rquote , \lquote o\rquote , \lquote p\rquote , $8D\cell }\pard \widctlpar\intbl {\cs16\f3 \row }\pard \widctlpar {\cs18 
\par Opis:
\par }\pard\plain \s21\fi284\sb40\sa40\widctlpar \f2\fs20\lang1045 {\cs18 Dyrektywa .ASCIS s\'b3u\'bfy do wygenerowania napisu, kt\'f3rego koniec jest oznaczony przez odwr\'f3cenie najstarszego bitu znaku.
\par }\pard\plain \widctlpar \f2\fs20\lang1045 {\cs15\b\f3\fs32 \page }{\b\f3\fs32 ";
\par .REF";
\par ".STRLEN"
\par }\pard \widctlpar {\b\f3\fs32 ".PASSDEF}
\par }